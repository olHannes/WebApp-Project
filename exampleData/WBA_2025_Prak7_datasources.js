window['datasources'] = [{"short_description":"Daten von Messungen zu Abrostungen an Spundwänden in den Jahren 1982 bis 2014","license":"closed","id":1,"title":"WaDiMe 3.0"},{"data_description_url":"https://www.elbe-datenportal.de/FisFggElbe/content/auswertung/UntersuchungsbereichAuswahl_start.action","short_description":"Werte zu Gewässerwerten  (Tagesminimum / Tagesmaximum) aus dem Datenportal Elbe","license":"Properitäre Lizenz - Nicht komerzielle Verwendung","id":2,"long_description":"Diese Anleitung dient dem Import von Daten der Gewässergüte speziell für Tages-minimum und -maximum Werte aus dem Datenportal der FGG Elbe.\r\nDas Datenportal bekommt seinerseits die Daten aus anderen Portalen oder Uploads der beteiligten Länder.\r\n\r\n<ol>\r\n<li>Datenportal aufrufen\r\n<br><a href=\"https://www.elbe-datenportal.de/\" target=\"_blank\">www.elbe-datenmortal.de</a>\r\n</li>\r\n<li>Aufruf: \"Datenabruf\"</li>\r\n<li>Aufruf: \"Allgemeine Gewässergüte\"</li>\r\n<li>Auswahl von\r\n<ul>\r\n<li>Gewässer = Elbe</li>\r\n<li>Messstelle = Gewünsche Messstelle (Auswahl ist auf Elbemessstelle eingeschränkt)</li>\r\n<li>Parameterguppe = Parameter der Qualitätskomponente Physik-Chemie</li>\r\n<li>Medium = Wasser - Gesamtprobe</li>\r\n<li>Jahr von = Das niedrigste zur Auswahl stehende auswählen</li>\r\n<li>Jahr bis = Das höchste zur Auswahl stehende auswählen</li>\r\n<li>Messwertart: Tagesminimum / Tagesmaximum</li>\r\n</ul>\r\nHier sind zwei separate Datenabrufe notwendig, einmal die Daten mit Tagesminimum und einmal die mit Tagesmaximum.\r\n<br>Sollten zu viele Datensätze vorhandensein, dann einzelne Jahre, oder Gruppen von Jahren exportieren.\r\n</li>\r\n<li>\r\n<li>Download der Datei unter \"Ergebnisausgabe\"</li>\r\n<li>Tabelle \"wq_importtabelle\" leeren</li>\r\n<li> Import der Datei in die Tabelle \"wq_importtabelle\" (Die Daten bleiben hier nur temporär. Die Tabelle ist mit den Spalten auf die Daten angepasst, da sonst bei jedem Import die Spalten neu angelegt und korrigiert werden müssen, da der Automatismus hier nicht funktioniert)</li>\r\n<li>Zu importierende Parameter prüfen\r\n<code><pre>select distinct(Parameter) from smartmonitoring.wq_importtabelle order by Parameter;</pre></code>\r\nSind die ermittelten Parameter vollständig in der Auflistung unter Schritt 10. und 11. vorhanden?\r\n<br>Wenn ja, kann mit dem Import fortgefahren werden.\r\n<br>Wenn nein, muss das Importskript angepasst werden.\r\n</li>\r\n<li>Zu importierende Werte prüfen\r\n<br>Die Spallte \"messert\" der Tabelle \"wq_importtabelle\" prüfen. Sind hier nicht numerische Messwerte vorhanden? (Oft < 20)\r\n<br>Dann diese Umwandeln: < 20 = 19; < 3 = 2\r\n</li>\r\n<li>Neue Tabelle für die Messwerte der Station anlegen\r\n<code><pre>\r\nCREATE TABLE smartmonitoring.wq_niederhafen (\r\n\tid bigserial NOT NULL,\r\n\tts timestamp NOT NULL,\r\n\tsauerstoff_min float4 NULL,\r\n\tsauerstoff_max float4 null,\r\n\t\"temp_min\" float4 NULL,\r\n\ttemp_max float4 null\r\n);\r\nalter table smartmonitoring.wq_niederhafen owner to smartmonitoring_gewaesser;\r\n</pre></code>\r\n<li>Daten aus temporärer Tabelle umwandeln\r\n<code><pre>\r\nINSERT INTO smartmonitoring.wq_niederhafen (ts, sauerstoff_min, sauerstoff_max, temp_min, temp_max) \r\nSELECT to_timestamp(Datum || ' ' || Zeit, 'DD.MM.YYYY HH24:MI:SS') AS ts, \r\ncast(replace(MAX(CASE WHEN a.parameter = 'Sauerstoffgehalt (min)' THEN Messwert END),',','.') as float4) AS sauerstoff_min,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Sauerstoffgehalt (max)' THEN Messwert END),',','.') as float4) AS sauerstoff_max,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Wassertemperatur (min)' THEN Messwert END),',','.') as float4) AS temp_min,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Wassertemperatur (max)' THEN Messwert END),',','.') as float4) AS temp_max\r\nFROM smartmonitoring.wq_importtabelle a  GROUP BY ts order by ts;\r\n</pre></code>\r\n</li>","title":"Datenportal FGG Elbe (Wasserqualitätswerte - Tagesminimum & maximum-Werte)"},{"data_description_url":"","short_description":"Werte zur bakteriellen Belastung des Gewässers","license":"Properitäre Lizenz - Nicht komerzielle Verwendung","id":3,"long_description":"Diese Anleitung dient dem Import von Daten der bakteriellen Belastung aus dem Datenportal Elbe.\r\n\r\n1. Daten herunterladen\r\n  1. https://www.elbe-datenportal.de\r\n(Anleitung fehlt noch)\r\n2. Import-Tabelle anlegen\r\nCREATE TABLE smartmonitoring.bakterien_importtable (\r\n\tid int8 DEFAULT nextval('smartmonitoring.bakterien_id_seq'::regclass) NOT NULL,\r\n\t\"parameter\" varchar NOT NULL,\r\n\tmesswert varchar NULL,\r\n\teinheit varchar NOT NULL,\r\n\tmesswerttyp varchar NULL,\r\n\tmedium varchar NULL,\r\n\tmesswertart varchar NULL,\r\n\tmessvorgang varchar NULL,\r\n\tdatum date NOT NULL,\r\n\tbezugsjahr int4 NULL,\r\n\tzeit time NULL,\r\n\tdatum_bis date NULL,\r\n\tzeit_bis varchar NULL,\r\n\tstatus varchar NULL,\r\n\tanalysemethode varchar NULL,\r\n\tbemerkung varchar NULL,\r\n\tzusatzinfo varchar NULL,\r\n\too_id int8 NULL,\r\n\tCONSTRAINT bakterien_pk PRIMARY KEY (id)\r\n);\r\n3. Daten mit dem Import-Tool von DBeaver importieren\r\n4. Datentabelle anlegen (falls noch nicht existent)\r\nCREATE TABLE smartmonitoring.bakterien (\r\n\tid bigserial NOT NULL,\r\n\tts timestamp NULL,\r\n\tfaekalsteptokokken varchar NULL,\r\n\tecoli varchar NULL,\r\n\tcoliforme varchar NULL,\r\n\tfaekal_coliforme varchar NULL,\r\n\too_id int8 NULL\r\n);\r\n5. Daten transferieren\r\nINSERT INTO smartmonitoring.bakterien (ts, faekalsteptokokken, ecoli, coliforme, faekal_coliforme, oo_id) \r\nSELECT to_timestamp(Datum || ' ' || Zeit, 'YYYY-MM-DD HH24:MI:SS') AS ts, \r\ncast(replace(MAX(CASE WHEN a.parameter = 'intestinale Enterokokken (F�kalstreptokokken)' THEN Messwert END),',','.') as varchar) AS faekalsteptokokken,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'E. coli (Colilert)' THEN Messwert END),',','.') as varchar) AS ecoli,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'coliforme Bakterien' THEN Messwert END),',','.') as varchar) AS coliforme, \r\ncast(replace(MAX(CASE WHEN a.parameter = 'F�kal-Coliforme' THEN Messwert END),',','.') as varchar) AS faekal_coliforme,\r\noo_id\r\nFROM smartmonitoring.bakterien_import a where messwert != '' GROUP BY ts, id order by ts;","title":"Datenportal FGG Elbe (Bakterienbelastung)"},{"data_description_url":"https://www.elwasweb.nrw.de","short_description":"Datenportal und Karte für Wasserdaten des Landes NRW","license":"Datenlizenz Deutschland – Namensnennung – Version 2.0","id":4,"long_description":"Vorgehen für den Import von Daten für chemische Messparameter aus ELWAS:\r\n\r\n<ol>\r\n<li>\r\nELWAS-Web aufrufen\r\n<a href=\"https://www.elwasweb.nrw.de/\">https://www.elwasweb.nrw.de</a>\r\n</li>\r\n<li>Klick auf \"Daten\"</li>\r\n<li>In Sektion \"Oberflächengewässer\" unter \"Auswertungen\" auf \"Messstellen Chemie und Biologie\"</li>\r\n<li>Im Dialog \"Vorauswahl\"\r\n\t<br>- Fachbereich = Chemie\r\n\t<br>- Auswertung = Einzelwerte Chemie\r\n</li>\r\n<li>Klick auf Button \"Suche\"</li>\r\n<li>Im Bereich \"GÜS\" Messstelle können die Messstellen ausgewählt werden.\r\n<br>- Mit \"Auswahl exportieren\" werden die ausgewählten Stellen in eine Datei geschrieben\r\n<br> Beispiel für den Mittellandkanal:\r\n<br>- Unter \"Auswahl importieren\" die Datei \"individuelles_messnetz.csv\" auswählen\r\n</li>\r\n<li>Im Bereich \"Stoff\" können die abzufragenden Parameter ausgewählt werden.\r\n<br>- Mit \"Auswahl exportieren\" können die gewählten Stoffe abgespeichert werden.\r\n<br>Beispiel für alle wichtigen Abrostungsparameter:\r\n<br>- Unter \"Stoff\" über \"Auswahl importieren\" die Datei \"individuelle_stoffgruppe\" auswählen.\r\n</li>\r\n<li>Mit Klick auf den Button \"Suchen\" wird nach Messwerten gesucht</li>\r\n<li>Man gelangt zum Tab \"Ergebnisse\"</li>\r\n<li>Klicka uf Button \"Excel Export\"</li>\r\n<li>Datei in Excel öffnen und als CSV speichern (Datei > Speichern unter\")</li>\r\n<li>Die Meta Informationen am Anfang und Ende der Datei entfernen</li>\r\n<li>Falsche Zeilenbrüche (nach \"- Metalle und Halbmetalle, \"- Komplexbildner sowie nach \"- APT ) entfernen</li>\r\n<li>Import-Tabelle anlegen (sofern nicht bereits vorhanden)\r\n<code><pre>\r\nCREATE TABLE smartmonitoring.wq_import_elwas (\r\n\tid int8 DEFAULT nextval('smartmonitoring.import_elwas_id_seq'::regclass) NOT NULL,\r\n\tprobe varchar(255) NULL,\r\n\tmessstellennummer varchar(32) NULL,\r\n\tmessstellenname varchar(32) NULL,\r\n\tgewaessernummer varchar(8) NULL,\r\n\tgewaessername varchar(128) NULL,\r\n\tstationierung varchar(64) NULL,\r\n\tostwert varchar(8) NULL,\r\n\tnordwert varchar(8) NULL,\r\n\tdatum date NULL,\r\n\tentnahmetiefe varchar(16) NULL,\r\n\tstoffnr int4 NULL,\r\n\tstoffgruppe varchar(32) NULL,\r\n\tstoffname varchar(255) NULL,\r\n\tprobenahmeart varchar(255) NULL,\r\n\tprobengut varchar(255) NULL,\r\n\ttrennverfahren varchar(255) NULL,\r\n\tmessverfahren varchar(255) NULL,\r\n\tbestimmungsgrenze varchar(255) NULL,\r\n\tmessergebnis varchar(255) NULL,\r\n\teinheit varchar(255) NULL,\r\n\terheber varchar(255) NULL\r\n);\r\n</pre></code>\r\n</li>\r\n<li>Datei mit der Import-Funktion des DBeaver importieren.</li>\r\n<li> Ziel-Tabelle anlegen, sofern nicht vorhanden:\r\n<code><pre>\r\nCREATE TABLE smartmonitoring.wq_elwas (\r\n\tid bigserial NOT NULL,\r\n\tts timestamp NOT NULL,\r\n\tamoniak float8 NULL,\r\n\tammonium float8 NULL,\r\n\tbromid float8 NULL,\r\n\tchlorid float8 NULL,\r\n\tcyanid float8 NULL,\r\n\teisen float8 NULL,\r\n\tfluorid float8 NULL,\r\n\tmagnesium float8 NULL,\r\n\tmangan float8 NULL,\r\n\tnitrilotriessigsaeure float8 NULL,\r\n\tnitrit float8 NULL,\r\n\tsauerstoff float8 NULL,\r\n\tsulfat float8 NULL,\r\n\t\"temp\" float8 NULL,\r\n\tph float8 NULL,\r\n\too_id int8 NULL,\r\n\tmessstellenname varchar(255) NULL,\r\n\tbestimmungsgrenze_amoniak float4 NULL,\r\n\tbestimmungsgrenze_ammonium float4 NULL,\r\n\tbestimmungsgrenze_bromid float4 NULL,\r\n\tbestimmungsgrenze_chlorid float4 NULL,\r\n\tbestimmungsgrenze_cyanid float4 NULL,\r\n\tbestimmungsgrenze_eisen float4 NULL,\r\n\tbestimmungsgrenze_fluorid float4 NULL,\r\n\tbestimmungsgrenze_magnesium float4 NULL,\r\n\tbestimmungsgrenze_mangan float4 NULL,\r\n\tbestimmungsgrenze_nitrilotriessigsaeure float4 NULL,\r\n\tbestimmungsgrenze_nitrit float4 NULL,\r\n\tbestimmungsgrenze_sauerstoff float4 NULL,\r\n\tbestimmungsgrenze_sulfat float4 NULL,\r\n\tbestimmungsgrenze_temp float4 NULL,\r\n\tbestimmungsgrenze_ph float4 NULL\r\n);\r\nALTER TABLE smartmonitoring.wq_elwas OWNER TO smartmonitoring_gewaesser;\r\n</pre></code>\r\n</li>\r\n<li>Prüfen, ob alle importierbaren Messwerte in der Ziel-Tabelle vorhanden sind\r\n<br><code><pre>select distinct(stoffname) from smartmonitoring.import_elwas order by stoffname</pre>;</code>\r\n<br>-> Falls nicht Spalten in der Ziel-Tabelle ergänzen und das nachfolgende Skript ergänzen\r\n</li>\r\n<li>Auf nicht unterstütze Werte prüfen (z.B. \"< 10\" als Messwert)\r\n<code><pre>\r\nUPDATE smartmonitoring.wq_import_elwas\r\nSET messergebnis = CAST(REPLACE(REGEXP_REPLACE(messergebnis, '^[<>]\\s*', ''), ',', '.') AS real)\r\nWHERE messergebnis LIKE '<%' OR messergebnis LIKE '>%';\r\n</pre></code></li>\r\n<li>Übertragungs-Skript ausführen:\r\n<code><pre>\r\nINSERT INTO smartmonitoring.wq_elwas (ts, amoniak, bestimmungsgrenze_amoniak, ammonium, bestimmungsgrenze_ammonium, bromid, bestimmungsgrenze_bromid, chlorid, bestimmungsgrenze_chlorid, cyanid, bestimmungsgrenze_cyanid, eisen, bestimmungsgrenze_eisen, fluorid, bestimmungsgrenze_fluorid, magnesium, bestimmungsgrenze_magnesium, mangan, bestimmungsgrenze_mangan, nitrilotriessigsaeure, bestimmungsgrenze_nitrilotriessigsaeure, nitrit, bestimmungsgrenze_nitrit, sauerstoff, bestimmungsgrenze_sauerstoff, sulfat, bestimmungsgrenze_sulfat, temp, bestimmungsgrenze_temp, ph, bestimmungsgrenze_ph, messstellenname) \r\nSELECT datum AS ts, \r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Ammoniak-Stickstoff' THEN messergebnis END),',','.') as real) AS amoniak,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Ammoniak-Stickstoff' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_amoniak,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Ammonium-Stickstoff' THEN messergebnis END),',','.') as real) AS ammonium,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Ammonium-Stickstoff' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_ammonium,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Bromid' THEN messergebnis END),',','.') as real) AS bromid, \r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Bromid' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_bromid,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Chlorid' THEN messergebnis END),',','.') as real) AS chlorid, \r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Chlorid' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_chlorid,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Cyanid, gesamt' THEN messergebnis END),',','.') as real) AS cyanid,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Cyanid, gesamt' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_cyanid,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Eisen' THEN messergebnis END),',','.') as real) AS eisen,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Eisen' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_eisen,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Fluorid' THEN messergebnis END),',','.') as real) AS fluorid,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Fluorid' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_fluorid,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Magnesium' THEN messergebnis END),',','.') as real) AS magnesium,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Magnesium' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_magnesium,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Mangan' THEN messergebnis END),',','.') as real) AS mangan,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Mangan' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_mangan,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Nitrilotriessigsäure (NTA)' THEN messergebnis END),',','.') as real) AS nitrilotriessigsaeure,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Nitrilotriessigsäure (NTA)' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_nitrilotriessigsaeure,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Nitrit' THEN messergebnis END),',','.') as real) AS nitrit,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Nitrit' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_nitrit,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Sauerstoff' THEN messergebnis END),',','.') as real) AS sauerstoff,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Sauerstoff' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_sauerstoff,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Sulfat' THEN messergebnis END),',','.') as real) as sulfat,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Sulfat' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_sulfat,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'Wassertemperatur' THEN messergebnis END),',','.') as real) AS temp,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'Wassertemperatur' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_temp,\r\ncast(replace(MAX(CASE WHEN a.stoffname = 'pH-Wert' THEN messergebnis END),',','.') as real) AS ph,\r\ncast(replace(NULLIF(MAX(CASE WHEN a.stoffname = 'pH-Wert' THEN bestimmungsgrenze END), ''),',','.') as real) AS bestimmungsgrenze_ph,\r\nmessstellenname\r\nFROM smartmonitoring.wq_import_elwas a  \r\nGROUP BY datum, messstellenname \r\nORDER BY datum;\r\n</pre></code>\r\n</li>\r\n<li>Nachsehen, ob alle Messstationen vorhanden sind\r\n<br>select distinct(messstellennummer), messstellenname, stationierung, ostwert, nordwert from smartmonitoring.wq_import_elwas order by messstellennummer;\r\n<br>Nachschauen in der tbl_observedobject\r\n</li>\r\n<li>ggf. neue Messstellen anlengen (in der tbl_observedobject mit zugehörigem Eintrag in der tbl_location)</li>\r\n<li>Neu importierte Messwerte den Stationen zuordnen (Spalte oo_id in der Tabelle wq_elwas)\r\n<br>update smartmonitoring.wq_elwas we set oo_id = 8200 where messstellenname = 'Minden-Dankersen';\r\n</li>","title":"ELWAS"},{"short_description":"Daten von durchgeführten Messungen im Bremer Hafen","id":5,"title":"Hafenmessungen Bremer Hafen"},{"short_description":"Daten von durchgeführten Messungen im Hamburger Hafen","license":"closed","id":6,"title":"Hafenmessungen Hamburger Hafen"},{"short_description":"Daten von durchgeführten Messungen im Mittellandkanal","license":"closed","id":7,"title":"Kanalmessungen Mittellandkanal"},{"short_description":"Daten von durchgeführten Messungen im Rostocker Hafen","license":"closed","id":9,"title":"Hafenmessungen Rostock"},{"data_description_url":"https://www.elbe-datenportal.de/FisFggElbe/content/auswertung/UntersuchungsbereichAuswahl_start.action","short_description":"Werte zu Gewässerwerten aus dem Datenportal Elbe","license":"Properitäre Lizenz - Nicht komerzielle Verwendung","id":10,"long_description":"Diese Anleitung dient dem Import von Daten der Gewässergüte aus dem Datenportal der FGG Elbe.\r\nDas Datenportal bekommt seinerseits die Daten aus anderen Portalen oder Uploads der beteiligten Länder.\r\n<ol>\r\n<li>Datenportal aufrufen\r\n<br><a href=\"https://www.elbe-datenportal.de/\" target=\"_blank\">www.elbe-datenportal.de</a>\r\n</li>\r\n<li>Aufruf: \"Datenabruf\"</li>\r\n<li>Aufruf: \"Allgemeine Gewässergüte\"</li>\r\n<li>Auswahl von\r\n<ul>\r\n<li>Gewässer = Elbe</li>\r\n<li>Messstelle = Gewünsche Messstelle (Auswahl ist auf Elbemessstelle eingeschränkt)</li>\r\n<li>Parameterguppe = Parameter der Qualitätskomponente Physik-Chemie</li>\r\n<li>Medium = Wasser - Gesamtprobe</li>\r\n<li>Jahr von = Das niedrigste zur Auswahl stehende auswählen</li>\r\n<li>Jahr bis = Das höchste zur Auswahl stehende auswählen</li>\r\nSollten zu viele Datensätze vorhandensein, dann einzelne Jahre, oder Gruppen von Jahren exportieren.\r\n</li>\r\n<li>Download der Datei unter \"Ergebnisausgabe\"</li>\r\n<li>Tabelle \"wq_importtabelle\" leeren</li>\r\n<li>Import der Datei in die Tabelle \"wq_importtabelle\" (Die Daten bleiben hier nur temporär. Die Tabelle ist mit den Spalten auf die Daten angepasst, da sonst bei jedem Import die Spalten neu angelegt und korrigiert werden müssen, da der Automatismus hier nicht funktioniert)</li>\r\n<li>Zu importierende Parameter prüfen\r\n<code><pre>select distinct(Parameter) from smartmonitoring.wq_importtabelle order by Parameter;</pre></code>\r\nSind die ermittelten Parameter vollständig in der Auflistung unter Schritt 10. und 11. vorhanden?\r\n<br>Wenn ja, kann mit dem Import fortgefahren werden.\r\n<br>Wenn nein, muss das Importskript angepasst werden.\r\n</li>\r\n<li>Zu importierende Werte prüfen\r\n<br>Die Spallte \"messert\" der Tabelle \"wq_importtabelle\" prüfen. Sind hier nicht numerische Messwerte vorhanden? (Oft < 20)\r\n<br>Dann diese Umwandeln: < 20 = 19; < 3 = 2\r\n</li>\r\n<li>Neue Tabelle für die Messwerte der Station anlegen\r\n<code><pre>\r\nCREATE TABLE smartmonitoring.wq_STATIONSNAME (\r\n\tid bigserial NOT NULL,\r\n\tts timestamp NOT NULL,\r\n\tabfiltrierbare_stoffe float4 NULL,\r\n\tbsb14 float4 NULL,\r\n\tbsb21 float4 NULL,\r\n\tbsb5 float4 NULL,\r\n\tbsb7 float4 NULL,\r\n\tcsb float4 NULL,\r\n\tchlorid float4 NULL,\r\n\tdoc float4 NULL,\r\n\tphosphor float4 NULL,\r\n\tstickstoff float4 NULL,\r\n\tpoc float4 NULL,\r\n\thaerte float4 NULL,\r\n\tsauerstoff_gehalt float4 NULL,\r\n\tsauerstoff_saettigung float4 NULL,\r\n\ttic float4 NULL,\r\n\ttoc float4 NULL,\r\n\t\"temp\" float4 NULL,\r\n\telect_leitf float4 NULL,\r\n\tph float4 NULL\r\n);\r\n</pre></code>\r\n<li>Daten aus temporärer Tabelle umwandeln\r\n<code><pre>\r\nINSERT INTO smartmonitoring.wq_STATIONSNAME (ts, abfiltrierbare_stoffe, bsb14, bsb21, bsb5, bsb7, csb, chlorid, doc, phosphor, stickstoff, poc, haerte, sauerstoff_gehalt, sauerstoff_saettigung, tic, toc, temp, elect_leitf, ph) \r\nSELECT to_timestamp(Datum || ' ' || Zeit, 'DD.MM.YYYY HH24:MI:SS') AS ts, \r\ncast(replace(MAX(CASE WHEN a.parameter = 'Abfiltrierbare Stoffe' THEN Messwert END),',','.') as float4) AS abfiltrierbare_stoffe,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'BSB 14 (Zehrung 14) ohne Hemmer' THEN Messwert END),',','.') as float4) AS bsb14,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'BSB 21 (Zehrung 21) ohne Hemmer' THEN Messwert END),',','.') as float4) AS bsb21, \r\ncast(replace(MAX(CASE WHEN a.parameter = 'BSB 5 (Zehrung 5) ohne Hemmer' THEN Messwert END),',','.') as float4) AS bsb5,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'BSB 7 (Zehrung 7) ohne Hemmer' THEN Messwert END),',','.') as float4) AS bsb7,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'CSB (chemischer Sauerstoffbedarf)' THEN Messwert END),',','.') as float4) AS csb,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Chlorid (Cl)' THEN Messwert END),',','.') as float4) AS chlorid,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'DOC (gelöster organischer Kohlenstoff)' THEN Messwert END),',','.') as float4) AS doc,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Gesamt-Phosphor (P)' THEN Messwert END),',','.') as float4) AS phosphor,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Gesamt-Stickstoff (N)' THEN Messwert END),',','.') as float4) AS stickstoff,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'POC' THEN Messwert END),',','.') as float4) as poc,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Gesamthärte (Ca + Mg)' THEN Messwert END),',','.') as float4) AS haerte,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Sauerstoffgehalt' THEN Messwert END),',','.') as float4) AS sauerstoff_gehalt,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'Sauerstoffsättigung' THEN Messwert END),',','.') as float4) AS sauerstoff_saettigung,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'TIC (anorganischer Kohlenstoff)' THEN Messwert END),',','.') as float4) AS tic,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'TOC (organischer Kohlenstoff)' THEN Messwert END),',','.') as float4) AS toc, \r\ncast(replace(MAX(CASE WHEN a.parameter = 'Wassertemperatur' THEN Messwert END),',','.') as float4) AS temp,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'elektrische Leitfähigkeit (25°C)' THEN Messwert END),',','.') as float4) AS elect_leitf,\r\ncast(replace(MAX(CASE WHEN a.parameter = 'pH-Wert' THEN Messwert END),',','.') as float4) AS ph\r\nFROM smartmonitoring.wq_importtabelle a  GROUP BY ts order by ts;\r\n</pre></code>\r\n<li> \"wq_importtabelle\" leeren</li>\r\n<li>Eigentümer der neuen Datentabelle ändern\r\n<code><pre>alter table smartmonitoring.wq_STATIONSNAME owner to smartmonitoring_gewaesser;</pre></code>\r\n</li>\r\n</ul>\r\n<br>\r\n<br>Die Messstationen wurden zuvor alle ausgelesen und erfasst. Vorgehen dafür:\r\n<ol>\r\n<li>Code des Auswahlfeldes der Messtationen kopieren</li>\r\n<li>Mit Copilot den Code in ein INSERT SQL Statement umwandeln</li>\r\n<li>INSERT auf die tbl_observedobject ausführen (wenn alle Messstationen neu sind, z.B. bei neuen Messwerten)</li>\r\n<li>Koordinaten über die tbl_location_join_oo verknüfen, bei denen der Name mit dem Namen einer bereits existierenden Station identisch ist</li>\r\n<li> Location für noch nicht vorhandene Stationen anlegen (in der tbl_location, Verknüpft über die tbl_location_join_oo)</li>\r\n<li>Koordinaten für alle noch nicht vorhandenen Stationen ermitteln</li>\r\n<li> https://www.elbe-datenportal.de/FisFggElbe/content/auswertung/MessstellenDetail_filter_messstelle</li>\r\n<li>Messstelle heraussuchen und Detailseite aufrufen</li>\r\n<li>Die dortigen Angaben der Position sind in UTM32N (siehe Dokumentation)</li>\r\n<li>Koordinaten in WGS84 umwandeln (mit: https://tool-online.com/de/koordinaten-umrechner.php)</li>\r\n<li>Neue Koordinaten in der Tabelle tbl_location eintragen (Format: POINT (13.40537 51.208854))</li>\r\n</ol>","title":"Datenportal FGG Elbe (Wasserqualitätswerte - Einzelmessungen & Dauermessungen)"},{"data_description_url":"https://gdi.bsh.de/de/feed/Timeseries-of-salinity-in-seawater-series.xml","short_description":"Zeitreihen von 12 kontinuierlich messenden Stationen in Nord- und Ost-see","license":"Datenlizenz Deutschland – Namensnennung – Version 2.0","status_code":"200","id":8,"title":"Zeitreihen des Salzgehalts im Meerwasser - Serie","update_date":"2025-01-09T17:54:07.897"},{"data_description_url":"https://scl.fh-bielefeld.de/SmartMonitoringAirquality/","short_description":"Messungen der Luftqualität in Minden und Umgebung","license":"CC BY 4.0","status_code":"200","data_api_url":"https://scl.fh-bielefeld.de/SmartDataAirquality/smartdata/records/sensor_b827eb8b2a02?storage=smartmonitoring&geotransform=latlon&size=50&page=1","id":11,"long_description":"Diese Datenquelle hat eine API, über welche Datensätze abgerufen werden können.<br>Einfach die URL mit der fetchAPI abfragen. Zurückgegeben wird ein JSON-Dokument mit dem Root-Eintrag \"records\" unter dem sich ein Array von Datensätzen befindet.","title":"Luftqualitätsmessungen","update_date":"2025-05-26T13:25:41.703"}]